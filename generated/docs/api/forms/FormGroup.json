{
  "id": "api/forms/FormGroup",
  "title": "FormGroup",
  "contents": "<article>\n  <header class=\"api-header\">\n    <h1 class=\"no-toc\" id=\"formgroup\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#formgroup\"><i class=\"material-icons\">link</i></a>FormGroup</h1>\n    <label class=\"api-type-label class\">class</label>\n    \n    \n    \n    <span class=\"version\"></span>\n  </header>\n\n  \n  <!-- INFO BAR -->\n<section class=\"info-bar\">\n\n<table class=\"is-full-width\">\n<tbody>\n<tr>\n  <th>npm Package</th>\n  <td><a href=\"https://www.npmjs.com/package/@angular/forms\">@angular/forms</a></td>\n</tr>\n<tr>\n  <th>Module</th>\n  <td><code>import { <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a> } from <a href=\"api/forms\">'@angular/forms'</a>;</code></td>\n</tr>\n<tr>\n  <th>Source</th>\n  <td><a href=\"https://github.com/angular/angular/tree/5.0.0-rc.0/packages/forms/src/model.ts#L868-L1212\">forms/src/model.ts</a></td>\n</tr>\n\n</tbody>\n</table>\n\n  \n<div class=\"what-it-does info-banner\">\n  <p translation-origin=\"off\">Tracks the value and validity state of a group of <a href=\"api/forms/FormControl\"><code>FormControl</code></a>\ninstances.</p>\n<p translation-origin=\"off\">A <code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> aggregates the values of each child <a href=\"api/forms/FormControl\"><code>FormControl</code></a> into one object,\nwith each control name as the key.  It calculates its status by reducing the statuses\nof its children. For example, if one of the controls in a group is invalid, the entire\ngroup becomes invalid.</p>\n<p translation-origin=\"off\"><code><a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a></code> is one of the three fundamental building blocks used to define forms in Angular,\nalong with <a href=\"api/forms/FormControl\"><code>FormControl</code></a> and <a href=\"api/forms/FormArray\"><code>FormArray</code></a>.</p>\n\n</div>\n\n  \n  \n  <section class=\"class-overview\">\n<h2 id=\"overview\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#overview\"><i class=\"material-icons\">link</i></a>Overview</h2>\n<code-example language=\"ts\" hidecopy=\"true\">\nclass <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a> extends <a class=\"code-anchor\" href=\"api/forms/AbstractControl\">AbstractControl</a> {\n  <a class=\"code-anchor\" href=\"api/forms/FormGroup#constructor\">constructor(controls: {[key: string]: AbstractControl}, validatorOrOpts?: ValidatorFn|ValidatorFn[]|AbstractControlOptions|null, asyncValidator?: AsyncValidatorFn|AsyncValidatorFn[]|null)</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormGroup#controls\">controls: {[key: string]: AbstractControl}</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormGroup#registerControl\">registerControl(name: string, control: AbstractControl): AbstractControl</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormGroup#addControl\">addControl(name: string, control: AbstractControl): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormGroup#removeControl\">removeControl(name: string): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormGroup#setControl\">setControl(name: string, control: AbstractControl): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormGroup#contains\">contains(controlName: string): boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormGroup#setValue\">setValue(value: {[key: string]: any}, options: {onlySelf?: boolean, emitEvent?: boolean} = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormGroup#patchValue\">patchValue(value: {[key: string]: any}, options: {onlySelf?: boolean, emitEvent?: boolean} = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormGroup#reset\">reset(value: any = {}, options: {onlySelf?: boolean, emitEvent?: boolean} = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/FormGroup#getRawValue\">getRawValue(): any</a>\n  // inherited from <a class=\"code-anchor\" href=\"api/forms/AbstractControl\">forms/AbstractControl</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#value\">value: any</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#validator\">validator: ValidatorFn|null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#asyncValidator\">asyncValidator: AsyncValidatorFn|null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#parent\">get parent(): FormGroup|FormArray</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#status\">status: string</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#valid\">get valid(): boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#invalid\">get invalid(): boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#pending\">get pending(): boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#disabled\">get disabled(): boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#enabled\">get enabled(): boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#errors\">errors: ValidationErrors|null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#pristine\">pristine: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#dirty\">get dirty(): boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#touched\">touched: boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#untouched\">get untouched(): boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#valueChanges\">valueChanges: Observable&#x3C;any></a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#statusChanges\">statusChanges: Observable&#x3C;any></a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#updateOn\">get updateOn(): FormHooks</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#setValidators\">setValidators(newValidator: ValidatorFn|ValidatorFn[]|null): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#setAsyncValidators\">setAsyncValidators(newValidator: AsyncValidatorFn|AsyncValidatorFn[]): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#clearValidators\">clearValidators(): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#clearAsyncValidators\">clearAsyncValidators(): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsTouched\">markAsTouched(opts: {onlySelf?: boolean} = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsUntouched\">markAsUntouched(opts: {onlySelf?: boolean} = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsDirty\">markAsDirty(opts: {onlySelf?: boolean} = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsPristine\">markAsPristine(opts: {onlySelf?: boolean} = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#markAsPending\">markAsPending(opts: {onlySelf?: boolean} = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#disable\">disable(opts: {onlySelf?: boolean, emitEvent?: boolean} = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#enable\">enable(opts: {onlySelf?: boolean, emitEvent?: boolean} = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#setParent\">setParent(parent: FormGroup|FormArray): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#setValue\">setValue(value: any, options?: Object): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#patchValue\">patchValue(value: any, options?: Object): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#reset\">reset(value?: any, options?: Object): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#updateValueAndValidity\">updateValueAndValidity(opts: {onlySelf?: boolean, emitEvent?: boolean} = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#setErrors\">setErrors(errors: ValidationErrors|null, opts: {emitEvent?: boolean} = {}): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#get\">get(path: Array&#x3C;string|number>|string): AbstractControl|null</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#getError\">getError(errorCode: string, path?: string[]): any</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#hasError\">hasError(errorCode: string, path?: string[]): boolean</a>\n  <a class=\"code-anchor\" href=\"api/forms/AbstractControl#root\">get root(): AbstractControl</a>\n}\n</code-example>\n</section>\n\n  \n<section class=\"how-to-use\">\n  <h2 id=\"how-to-use\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#how-to-use\"><i class=\"material-icons\">link</i></a>How To Use</h2>\n  <p translation-origin=\"off\">When instantiating a <a href=\"api/forms/FormGroup\"><code>FormGroup</code></a>, pass in a collection of child controls as the first\nargument. The key for each child will be the name under which it is registered.</p>\n<h3 translation-origin=\"off\" id=\"example\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#example\"><i class=\"material-icons\">link</i></a>Example</h3>\n<code-example>\nconst form = new <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>({\n  first: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('Nancy', <a href=\"api/forms/Validators\" class=\"code-anchor\">Validators</a>.minLength(2)),\n  last: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('Drew'),\n});\n\nconsole.log(form.value);   // {first: 'Nancy', last; 'Drew'}\nconsole.log(form.status);  // 'VALID'\n</code-example>\n<p translation-origin=\"off\">You can also include group-level validators as the second arg, or group-level async\nvalidators as the third arg. These come in handy when you want to perform validation\nthat considers the value of more than one child control.</p>\n<h3 translation-origin=\"off\" id=\"example-1\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#example-1\"><i class=\"material-icons\">link</i></a>Example</h3>\n<code-example>\nconst form = new <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>({\n  password: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('', <a href=\"api/forms/Validators\" class=\"code-anchor\">Validators</a>.minLength(2)),\n  passwordConfirm: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('', <a href=\"api/forms/Validators\" class=\"code-anchor\">Validators</a>.minLength(2)),\n}, passwordMatchValidator);\n\n\nfunction passwordMatchValidator(g: <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>) {\n   return g.get('password').value === g.get('passwordConfirm').value\n      ? null : {'mismatch': true};\n}\n</code-example>\n<p translation-origin=\"off\">Like <a href=\"api/forms/FormControl\"><code>FormControl</code></a> instances, you can alternatively choose to pass in\nvalidators and async validators as part of an options object.</p>\n<code-example>\nconst form = new <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>({\n  password: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('')\n  passwordConfirm: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>('')\n}, {validators: passwordMatchValidator, asyncValidators: otherValidator});\n</code-example>\n<p translation-origin=\"off\">The options object can also be used to set a default value for each child\ncontrol's <code>updateOn</code> property. If you set <code>updateOn</code> to <code>'blur'</code> at the\ngroup level, all child controls will default to 'blur', unless the child\nhas explicitly specified a different <code>updateOn</code> value.</p>\n<code-example language=\"ts\">\nconst c = new <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>({\n   one: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>()\n}, {updateOn: 'blur'});\n</code-example>\n<ul>\n<li><strong>npm package</strong>: <code>@angular/forms</code></li>\n</ul>\n\n</section>\n\n\n  \n\n\n\n  \n  \n\n\n\n\n\n\n<section class=\"constructors\">\n  <h2 id=\"constructor\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#constructor\"><i class=\"material-icons\">link</i></a>Constructor</h2>\n  \n    <div class=\"constructor\">\n  <a id=\"constructor\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">constructor(controls: {[key: string]: <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>}, validatorOrOpts?: <a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a>|<a href=\"api/forms/ValidatorFn\" class=\"code-anchor\">ValidatorFn</a>[]|AbstractControlOptions|null, asyncValidator?: <a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a>|<a href=\"api/forms/AsyncValidatorFn\" class=\"code-anchor\">AsyncValidatorFn</a>[]|null)</code-example></div>\n\n    \n    \n  \n</section>\n\n\n\n\n<section class=\"instance-members\">\n  <h2 id=\"members\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#members\"><i class=\"material-icons\">link</i></a>Members</h2>\n  \n    <div class=\"instance-member\">\n  <a id=\"controls\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">controls: {[key: string]: <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>}</code-example></div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"registerControl\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">registerControl(name: string, control: <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>): <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a></code-example>\n  <p translation-origin=\"off\">Registers a control with the group's list of controls.</p>\n<p translation-origin=\"off\">This method does not update value or validity of the control, so for\nmost cases you'll want to use <a href=\"api/forms/FormGroup#addControl\"><code>FormGroup</code></a> instead.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"addControl\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">addControl(name: string, control: <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>): void</code-example>\n  <p translation-origin=\"off\">Add a control to this group.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"removeControl\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">removeControl(name: string): void</code-example>\n  <p translation-origin=\"off\">Remove a control from this group.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"setControl\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">setControl(name: string, control: <a href=\"api/forms/AbstractControl\" class=\"code-anchor\">AbstractControl</a>): void</code-example>\n  <p translation-origin=\"off\">Replace an existing control.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"contains\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">contains(controlName: string): boolean</code-example>\n  <p translation-origin=\"off\">Check whether there is an enabled control with the given name in the group.</p>\n<p translation-origin=\"off\">It will return false for disabled controls. If you'd like to check for\nexistence in the group only, use <a href=\"api/forms/AbstractControl#get\"><code>AbstractControl</code></a> instead.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"setValue\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">setValue(value: {[key: string]: any}, options: {onlySelf?: boolean, emitEvent?: boolean} = {}): void</code-example>\n  <p translation-origin=\"off\">Sets the value of the <a href=\"api/forms/FormGroup\"><code>FormGroup</code></a>. It accepts an object that matches\nthe structure of the group, with control names as keys.</p>\n<p translation-origin=\"off\">This method performs strict checks, so it will throw an error if you try\nto set the value of a control that doesn't exist or if you exclude the\nvalue of a control.</p>\n<h3 translation-origin=\"off\" id=\"example-2\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#example-2\"><i class=\"material-icons\">link</i></a>Example</h3>\n<code-example>\nconst form = new <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>({\n   first: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>(),\n   last: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>()\n});\nconsole.log(form.value);   // {first: null, last: null}\n\nform.setValue({first: 'Nancy', last: 'Drew'});\nconsole.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n</code-example>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"patchValue\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">patchValue(value: {[key: string]: any}, options: {onlySelf?: boolean, emitEvent?: boolean} = {}): void</code-example>\n  <p translation-origin=\"off\">Patches the value of the <a href=\"api/forms/FormGroup\"><code>FormGroup</code></a>. It accepts an object with control\nnames as keys, and will do its best to match the values to the correct controls\nin the group.</p>\n<p translation-origin=\"off\"> It accepts both super-sets and sub-sets of the group without throwing an error.</p>\n<h3 translation-origin=\"off\" id=\"example-3\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#example-3\"><i class=\"material-icons\">link</i></a>Example</h3>\n<code-example>\nconst form = new <a href=\"api/forms/FormGroup\" class=\"code-anchor\">FormGroup</a>({\n   first: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>(),\n   last: new <a href=\"api/forms/FormControl\" class=\"code-anchor\">FormControl</a>()\n});\nconsole.log(form.value);   // {first: null, last: null}\n\nform.patchValue({first: 'Nancy'});\nconsole.log(form.value);   // {first: 'Nancy', last: null}\n</code-example>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"reset\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">reset(value: any = {}, options: {onlySelf?: boolean, emitEvent?: boolean} = {}): void</code-example>\n  <p translation-origin=\"off\">Resets the <a href=\"api/forms/FormGroup\"><code>FormGroup</code></a>. This means by default:</p>\n<ul>\n<li>The group and all descendants are marked <code>pristine</code></li>\n<li>The group and all descendants are marked <code>untouched</code></li>\n<li>The value of all descendants will be null or null maps</li>\n</ul>\n<p translation-origin=\"off\">You can also reset to a specific form state by passing in a map of states\nthat matches the structure of your form, with control names as keys. The state\ncan be a standalone value or a form state object with both a value and a disabled\nstatus.</p>\n<h3 translation-origin=\"off\" id=\"example-4\"><a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/FormGroup#example-4\"><i class=\"material-icons\">link</i></a>Example</h3>\n<code-example language=\"ts\">\nthis.form.reset({first: 'name', last: 'last name'});\n\nconsole.log(this.form.value);  // {first: 'name', last: 'last name'}\n</code-example>\n<ul>\n<li>OR -</li>\n</ul>\n<code-example>\nthis.form.reset({\n  first: {value: 'name', disabled: true},\n  last: 'last'\n});\n\nconsole.log(this.form.value);  // {first: 'name', last: 'last name'}\nconsole.log(this.form.get('first').status);  // 'DISABLED'\n</code-example>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n    <div class=\"instance-member\">\n  <a id=\"getRawValue\"></a>\n  <code-example hidecopy=\"true\" class=\"no-box api-heading\">getRawValue(): any</code-example>\n  <p translation-origin=\"off\">The aggregate value of the <a href=\"api/forms/FormGroup\"><code>FormGroup</code></a>, including any disabled controls.</p>\n<p translation-origin=\"off\">If you'd like to include all values regardless of disabled status, use this method.\nOtherwise, the <code>value</code> property is the best way to get the value of the group.</p>\n\n  </div>\n\n    \n    <hr class=\"hr-margin\">\n  \n</section>\n\n\n\n\n\n\n\n\n</section></article>"
}